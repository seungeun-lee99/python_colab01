{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"20210531_4팀_노애정","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMNNdOsqnhiaEnlPBxUZzTa"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"VEIvdHDUpOPF"},"source":["예제1> 편의점 재고 관리\n","\n","편의점 재고 관리 프로그램을 작성해보자.\n","프로그램의 기능은 다음과 같다.\n","\n","- 엔터를 입력할 때까지 반복하여 (while문 사용)사용자로부터 물건이름과 개수를 입력받는다. (딕셔너리 사용, key를 물건이름)\n","- 만약 물건 이름이 존재하지 않으면 추가하고, 존재하면 물건 개수를 더한다. (if, else구조)\n","- 입력이 끝나면 재고 현황을 물건 이름의 오름차순으로 정렬하여 출력한다.\n","(딕셔너리 전체를 물건이름으로 정렬하여 for문을 돌려서 출력)\n"]},{"cell_type":"code","metadata":{"id":"SKBLa3wFoDaG"},"source":["#물건이름: product, 개:number\n","d_li = {}\n","while True:\n","        name = input('물건이름: ') \n","        if name == '':\n","            break\n","        num = int(input('개수: '))\n","        if name in d_li.keys():\n","            d_li[name] += num\n","        else:\n","            d_li[name] = num\n","print(d_li)\n","\n","#오름차순 \n","for key, value in sorted(d_li.items()):\n","    print(key,value,end=' ')\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AeMMpFHgvGIV"},"source":["집합\n","- set_name = {value0, ... valueN}\n","-또는, set_name = set([요소1, 요소2])\n","- menu = {'아메리카노','라떼}\n","- 자료들이 순서와 중복 없이 저장된 것\n","- 중괄호{} 안에 요소를 쉼표로 구분하여 나열한다.\n"]},{"cell_type":"code","metadata":{"id":"f6i4S8cjrP_W"},"source":["#집합예제\n","\n","set_wish = set(['새우깡','오감자','양파링','양파링'])\n","set_wish"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ieBt0narvkCn"},"source":["#집합예제\n","set_wish = {'새우깡','오감자','양파링','양파링'}"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UfLe8OJb2E3d"},"source":["집합(set)>요소 추출\n","- 집합 자료형은 순서가 업식 때문에 인덱싱으로 값을 얻을 수 없다.\n","- 집합 자료형에 저장된 값을 인덱싱으로 접근하려면 리스트나 튜플로 변환하여 사용한다\n","\n"]},{"cell_type":"code","metadata":{"id":"6pz9egAlvyGd"},"source":["#1 리스트로 저장> 인덱싱\n","set_wish = {'새우깡','오감자','양파링','양파링','고래밥'}\n","list_wish = list(set_wish)\n","print(list_wish)\n","print(list_wish[2])\n","\n","#2 튜플로 저장> 인덱싱\n","set_wish = {'새우깡','오감자','양파링','양파링','고래밥'}\n","list_wish = tuple(set_wish)\n","print(list_wish)\n","print(list_wish[2])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jg_WTWEF3eBD"},"source":["집합(set)> 연산\n","\n"," - a와 b의 합집합: a.union(b)\n","    - a  \n"," a와 b의 교집합: a.intersection(b)\n","    - a & b\n"," - a와 b의 차집합 : a.difference(b) \n","    - a -b "]},{"cell_type":"code","metadata":{"id":"F2MiT4c12ZMB"},"source":["sweety = {'빼빼로','칸초','허니버터'}\n","salty = {'허니버터','포카칩','새우깡'}\n","#합집합\n","print(sweety.union(salty))\n","print(sweety|salty)\n","\n","#교집합 \n","print(sweety.intersection(salty))\n","print(sweety&salty)\n","\n","#차집합\n","print(sweety.difference(salty))\n","print(sweety-salty)\n","print(salty.difference(sweety))\n","print(salty-sweety)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZlKvWfDt4muo"},"source":["집합 >요소추가\n","\n","- 1개 추가: 집합명.add(요소)\n","- 여러개 추가: 집합명.update(리스트)\n","- 요소 삭제: 집합명.remove(요소)\n"]},{"cell_type":"code","metadata":{"id":"gw4yX-sv4elI"},"source":["set_wish = {'새우깡','오감자','양파링','양파링','고래밥'}\n","set_wish.add('허니버터')\n","print(set_wish)\n","\n","set_wish = {'새우깡','오감자','양파링','양파링','고래밥'}\n","set_wish.update(['빼빼로','칸초'])\n","print(set_wish)\n","\n","#집합명.remove(요소)\n","set_wish = {'새우깡','오감자','양파링','양파링','고래밥'}\n","set_wish.remove('새우깡')\n","print(set_wish)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"CqUDBxDC6PWd"},"source":["#요소 존재여부 확인 후 삭제\n","set_wish = {'새우깡','오감자','양파링','양파링','고래밥'}\n","if '허니버터' in list(set_wish):\n","    set_wish.remove('허니버터')\n","set_wish"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ihd4_nCd7b9a"},"source":["오류 메시지 해석\n","\n","- NameError: 참조변수 없음 (변수명이 정의되지 않았을 때)\n","- SyntaxError: 문법이 잘못되었음 [오타, 괄호를 제대로 닫지 않았을 때, 콜론(:)을 잘 못 사용했을 때]\n","- TypeError: 타입이 맞지 않음\n","    예) str값을 빼거나 나누었을 때\n","- IndentationError: 들여쓰기 오류\n","    예) print(1)\n","         print(2)\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"7uYmOVLu824E"},"source":["프로그램의 3가지 기본 제어 구조\n","\n","순차구조: 명령들이 순차적으로 실행되는 구조\n","선택구조: 조건에 따라 명령을 선택하여 실행되는 구조\n","반복구조: 동일한 명령이 반복되면서 실행되는 구조\n","₩\n","1)\n","- if 조건:\n","    명령어\n","\n","2)\n","- if 조건:\n","    명령어\n","else:\n","    명령어\n","3)\n","- if 조건:\n","    명령어1\n","elif 조건2:\n","    명령어2\n","\n","4) if/elif/else\n","- if 조건:\n","    명령어1\n","elif 조건:\n","    명령어2\n","else:\n","    명령어3\n","\n","5) 중첩 if\n","- if조건:\n","    명령어1\n","    if 조건:\n","        명령어2\n","else:\n","    명령어3\n","\n","₩\n"," "]},{"cell_type":"code","metadata":{"id":"C83_VNWZ8zg1"},"source":["#예제\n","\n","a = 1\n","if a<0:\n","    print('a는 0보다 작다.')\n","    print('a는 음수이다.')\n","print('끝')\n","\n","#예제2\n","\n","a = 1\n","if a <0:\n","    print('a는 0보다 작다')\n","print('a는 음수이다')\n","print('끝')\n","\n","#예제3\n","temp = float(input('체온:'))\n","if temp>37.5:\n","    print('등교불가')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OlfSpTAX5JYu"},"source":["#if ~ else 구조\n","\n","a=5\n","b=4\n","if a%b ==0:\n","    print(f'{a}는 {b}로 나누어 떨어집니다.')\n","else:\n","    print(f'{a}는 {b}로 나머지가 {a%b}입니다.')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zjHU9CwlEfcz"},"source":["#예제> 코로나 자가진단 프로그램 3단계(1/3)\n","\n","- 체온, 현재 코로나 진단 검사 결과를 기다리고 있는지의 여부, 자가격리 여부에 따라 등교가능 여부를 알려주는 프로그램입니다.\n","- 체온, 검사결과대기여부, 자가격리여부를 입력받아 다음과 같은 조건으로 등교 가능 여부를 출력하세요.\n","- 만약 체온이 37.5도초과이면 '발열기준 초과: 등교불가'를 출력합니다.\n","- 아니고, 만약 검사대기여부가 'y'이면 '검사대기 중 등교불가'를 출력합니다.\n","- 아니고, 만약 자가격리여부가 'y'이면 '자가격리 중 등교불가'를 출력합니다.\n","- 모든 조건이 만족하지 않는다면 '등교가능'을 출력합니다. "]},{"cell_type":"code","metadata":{"id":"rHqpYL-KDwYd"},"source":["temp = float(input('체온: '))\n","wait_result = input('검사결과대기여부(y/n): ')\n","quarantine = input('자가격리여부(y/n): ')\n","\n","if temp > 37.5:\n","    print('발열기 초과: 등교불가')\n","elif wait_result == 'y':\n","    print('검사대기 중 등교불가')\n","elif quarantine == 'y':\n","    print('자가격리 중 등교불가')\n","else:\n","    print('등교가능')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZIbcwxG_FTZy"},"source":["#추가 예제: 점수에 따른 등급 출력하기\n","grade = ' '\n","point = int(input('점수: '))\n","if point >= 90:\n","    grade = 'A'\n","elif point >= 80:\n","    grade = 'B'\n","elif point >= 70:\n","    grade = 'C'\n","elif point >= 60:\n","    grade = 'D'\n","else:\n","    grade = 'F'\n","\n","print(f'등급: {grade}')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XMaTrBIYHF4p"},"source":["dc_1 = 5\n","dc_2 = 7.5\n","dc_3 = 10\n","#금액에 따른 할인율 계산\n","price = int(input('물건 구매가를 입력하세요: '))\n","print(f'구매가: {price}원')\n","\n","if price >= 100000:\n","    print(f'할인율: {dc_3}%')\n","    print(f'할인금액: {int(dc_3/100*price)})원')\n","    print(f'지불금액: {int(price-(dc_3/100*price))})원')\n","elif price >= 50000:\n","    print(f'할인율: {dc_2}%')\n","    print(f'할인금액: {int(dc_2/100*price)}원')\n","    print(f'지불금액: {int(price-(dc_2/100*price))}원')\n","elif price >= 10000:\n","    print(f'할인율: {dc_1}%')\n","    print(f'할인금액: {int(dc_1/100*price)}원')\n","    print(f'지불금액: {int(price-(dc_1/100*price))}원')\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"skCRi_t1JLkH"},"source":["예제> 최소값 구하기(1/3)\n","- 3개의 수를 입력받아 가장 작은 수를 출력하세요.\n","\n"]},{"cell_type":"code","metadata":{"id":"bBA4tn_KPhVU"},"source":["n1 = int(input('수1: '))\n","n2 = int(input('수2: '))\n","n3 = int(input('수3: '))\n","min_n = n1\n","\n","if n2 < min_n:\n","    min_n = n2  \n","\n","if n3 < min_n:\n","    min_n = n3\n","\n","print(f'가장 작은수: {min_n}')\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cytrpBBZQcgl"},"source":["#다른 방법\n","n1 = int(input('수1: '))\n","n2 = int(input('수2: '))\n","n3 = int(input('수3: '))\n","min_n = min(n1,n2,n3)\n","print(f'가장 작은수: {min_n}')\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Aq-NIBnaRXJH"},"source":["논리연산자\n","\n","조건 연결\n","- and: 그리고 \n","- or: 또는\n","- not: ~가 아니다. "]},{"cell_type":"code","metadata":{"id":"AAvgI4X8SzYA"},"source":["# 논리 연산자(Logical operator)\n","# and, or, not\n","print(True and True)\n","print(True and False)\n","print(False and True)\n","print(False and False)\n","print()\n","print(True or True)\n","print(True or False)\n","print(False or True)\n","print(False or False)\n","print()\n","print(not True)\n","print(not False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zMU6VCHlS0D3"},"source":["\"\"\"\n","x in s, x not in s\n","in, not in 뒤의 리스트나 튜플, 문자열 중에 포함 여부를 참, 거짓으로 반환\n","\"\"\"\n","\n","1 in [1,2,3]\n","'a' in ('a','b','c')\n","'j' not in 'python'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"94ANqhvaTQgq"},"source":["#예제: 국립공원 입장료 계산기\n","\n","age = int(input('나이를 입력하세요: '))\n","fee = 3000\n","if age >= 65 or age <= 7:\n","    fee = 0\n","elif age >= 8 and age <= 18:\n","    fee = 1000\n","\n","print(f'{fee}원입니다.')\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"t0K_HM7bTsIE"},"source":["#예제: 로그인 프로그램\n","\n","ID1 = 'ID1234'\n","PW1 = 'PWD1234'\n","Log_in = '로그인 실패'\n","\n","ID2 = input('아이디:')\n","PW2 = input('패스워드:')\n","\n","if ID1 == ID2 and PW1 == PW2:\n","    Log_in = '로그인 성공'\n","\n","print(Log_in)       "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"m_sSc7ArXKqQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622448959210,"user_tz":-540,"elapsed":5614,"user":{"displayName":"Aejung Noh","photoUrl":"","userId":"09649323087888224889"}},"outputId":"54ebedae-f2b3-446a-8d9f-28861899af1b"},"source":["#예제: 사칙연산 프로그램(1/3) - 문제분석\n","\n","num1 = int(input('숫자1 : '))\n","num2 = int(input('숫자2 : '))\n","operator = input('연산기호(+,-,*,/) : ') \n","result = 0\n","\n","if operator == '+':\n","    result = num1 + num2\n","elif operator == '-':\n","    result = num1 - num2\n","elif operator == '*':\n","    result = num1 * num2\n","elif operator == '/': \n","    if num2 != 0:\n","        result = num1/num2\n","\n","print('-'*50)\n","if operator == '/': \n","    if num2 == 0:\n","        print('0으로 나눌 수 없습니다.')\n","    else:\n","        print(f'{num1} {operator} {num2} = {result}')\n","\n","\n","        \n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["숫자1 : 1\n","숫자2 : 0\n","연산기호(+,-,*,/) : /\n","--------------------------------------------------\n","0으로 나눌 수 없습니다.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"x6FNTnK4fsk1"},"source":["random.randint(최소, 최대)\n","import random\n","random.randint(1,6)\n","\n","두 개의 주사위를 던져 더 큰 수가 나오는 사람이 이기는 게임을 작성하시오\n","\n","- 주사위1: 1\n","- 주사위2:3\n","- 주사위 2가 이겼습니다. "]},{"cell_type":"code","metadata":{"id":"X6ei8e5EZf6m","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622449599956,"user_tz":-540,"elapsed":37,"user":{"displayName":"Aejung Noh","photoUrl":"","userId":"09649323087888224889"}},"outputId":"5b4059ea-78f1-4872-e919-b129691df204"},"source":["import random\n","dice1 = random.randint(1,6)\n","dice2 = random.randint(1,6)\n","\n","print('주사위1:', dice1)\n","print('주사위2:', dice2)\n","if dice1 > dice2:\n","    print('주사위1가 이겼습니다.')\n","elif dice1 < dice2:\n","    print('주사위2가 이겼습니다.')\n","elif dice1 == dice2:\n","    print('같은 수가 나왔습니다.')\n","\n"],"execution_count":26,"outputs":[{"output_type":"stream","text":["주사위1: 5\n","주사위2: 2\n","주사위1가 이겼습니다.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"RjHHGPleg5zg","executionInfo":{"status":"ok","timestamp":1622449593677,"user_tz":-540,"elapsed":444,"user":{"displayName":"Aejung Noh","photoUrl":"","userId":"09649323087888224889"}}},"source":[""],"execution_count":23,"outputs":[]}]}